{"version":3,"file":"static/js/342.e564e160.chunk.js","mappings":"oMACA,EAA4B,yBAA5B,EAA4D,oBAA5D,EAAuF,oBAAvF,EAAmH,qBAAnH,EAAiJ,sBAAjJ,EAA+K,qB,+CCgElKA,GAAiBC,EAAAA,EAAAA,GAAmC,CAE7DC,KAAM,SAFoBD,EAlDsD,SAA9EE,EAA+E,GAAuC,IAAtCC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAEvG,OACI,kBAAMC,SAAUH,EAAcI,UAAWC,EAAzC,UACKJ,IAAS,iBAAKG,UAAWC,EAAhB,cAA2BJ,EAA3B,QACV,gBAAKG,UAAWC,EAAhB,UACI,SAACC,EAAA,EAAD,CAAOC,YAAY,QACZC,KAAK,OACLC,KAAK,QACLC,QAAQ,WACRC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,QAGtB,gBAAKV,UAAWC,EAAhB,UACI,SAACC,EAAA,EAAD,CAAOC,YAAY,WACZC,KAAK,WACLC,KAAK,WACLC,QAAQ,WACRC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,QAGtB,gBAAKV,UAAWC,EAAhB,UACI,SAACC,EAAA,EAAD,CAAOE,KAAK,WACLG,UAAWI,EAAAA,GACXC,MAAM,kBAIbd,IAAc,iCACV,gBAAKe,IAAKf,EAAYgB,IAAI,aAC1B,gBAAKd,UAAWC,EAAhB,UACI,SAACC,EAAA,EAAD,CAAOC,YAAY,UACZC,KAAK,OACLC,KAAK,UACLC,QAAQ,WACRC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,WAM9B,gBAAKV,UAAWC,EAAhB,UACI,SAAC,KAAD,CAAcP,KAAMC,Y,QCApC,GAAeoB,EAAAA,EAAAA,KALS,SAACC,GAAD,MAA4B,CAChDlB,WAAYkB,EAAMC,KAAKnB,WACvBoB,OAAQF,EAAMC,KAAKC,UAGiB,CAACC,QAAAA,EAAAA,IAAzC,EAzC2C,WACvC,IAAMrB,GAAasB,EAAAA,EAAAA,KAAY,SAACJ,GAAD,OAA2BA,EAAMC,KAAKnB,cAC/DoB,GAASE,EAAAA,EAAAA,KAAY,SAACJ,GAAD,OAA2BA,EAAMC,KAAKC,UAC3DG,GAAWC,EAAAA,EAAAA,MAMjB,OAAIJ,GACO,SAAC,KAAD,CAAUK,GAAI,cAGjB,0BACJ,iBAAKvB,UAAWC,EAAhB,WACI,UAACuB,EAAA,EAAD,YACI,sDAC6B,cAAGC,KAAM,wCACNC,OAAQ,SADX,sBAG7B,oEAGA,uDAEA,8CAIJ,eAAI1B,UAAWC,EAAf,uBAEA,SAACT,EAAD,CAAgBO,SA1BP,SAAC4B,GACdN,GAASF,EAAAA,EAAAA,IAAQQ,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,WAyB1CjC,WAAYA","sources":["webpack://samurai-way/./src/components/Login/Login.module.css?3530","components/Login/LoginForm.tsx","components/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__5+rul\",\"form\":\"Login_form__-Lnx1\",\"data\":\"Login_data__OgKhT\",\"title\":\"Login_title__w5MrQ\",\"button\":\"Login_button__g97iB\",\"error\":\"Login_error__rbe60\"};","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {ButtonSubmit, CheckboxTC, TextareaFC} from \"../common/FormControls/FormsControls\";\r\nimport s from './Login.module.css'\r\n\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype PropsType = {\r\n    captchaUrl: string | null\r\n}\r\nconst LoginForm: React.FC<PropsType & InjectedFormProps<FormDataType, PropsType>> = ({handleSubmit, error, captchaUrl}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            {error && <div className={s.error}> {error} </div>}\r\n            <div className={s.data}>\r\n                <Field placeholder='Email'\r\n                       type='text'\r\n                       name='email'\r\n                       variant='standard'\r\n                       component={TextareaFC}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div className={s.data}>\r\n                <Field placeholder='Password'\r\n                       type='password'\r\n                       name='password'\r\n                       variant='standard'\r\n                       component={TextareaFC}\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div className={s.data}>\r\n                <Field type='checkbox'\r\n                       component={CheckboxTC}\r\n                       label='remember me'/>\r\n            </div>\r\n\r\n            {\r\n                captchaUrl && <>\r\n                    <img src={captchaUrl} alt='captcha'/>\r\n                    <div className={s.data}>\r\n                        <Field placeholder='Captcha'\r\n                               type='text'\r\n                               name='captcha'\r\n                               variant='standard'\r\n                               component={TextareaFC}\r\n                               validate={[required]}\r\n                        />\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            <div className={s.button}>\r\n                <ButtonSubmit form={LoginForm}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const LoginReduxForm = reduxForm<FormDataType, PropsType>({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, GetStringKeys, Input} from \"../common/FormControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {LoginTC} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {ReduxStateType} from \"../../Redux/redux-stor\";\r\nimport s from './Login.module.css'\r\nimport {FormDataType, LoginReduxForm} from \"./LoginForm\";\r\nimport {FormControl, FormLabel} from \"@material-ui/core\";\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = GetStringKeys<FormDataType>\r\n\r\n\r\nconst Login: React.FC<LoginFormOwnProps> = () => {\r\n    const captchaUrl = useSelector((state: ReduxStateType) => state.auth.captchaUrl)\r\n    const isAuth = useSelector((state: ReduxStateType) => state.auth.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        dispatch(LoginTC(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return  <div>\r\n        <div className={s.container}>\r\n            <FormLabel>\r\n                <p>\r\n                    To log in get registered <a href={'https://social-network.samuraijs.com/'}\r\n                                                target={'_blank'}>here</a>\r\n                </p>\r\n                <p>\r\n                    or use common test account credentials:\r\n                </p>\r\n                <p> Email: free@samuraijs.com\r\n                </p>\r\n                <p>\r\n                    Password: free\r\n                </p>\r\n            </FormLabel>\r\n            <h2 className={s.title}> LOGIN: </h2>\r\n\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: ReduxStateType) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {LoginTC})(Login);"],"names":["LoginReduxForm","reduxForm","form","LoginForm","handleSubmit","error","captchaUrl","onSubmit","className","s","Field","placeholder","type","name","variant","component","TextareaFC","validate","required","CheckboxTC","label","src","alt","connect","state","auth","isAuth","LoginTC","useSelector","dispatch","useDispatch","to","FormLabel","href","target","formData","email","password","rememberMe","captcha"],"sourceRoot":""}