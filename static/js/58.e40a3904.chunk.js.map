{"version":3,"file":"static/js/58.e40a3904.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/My posts/ProfileInfo/ProfileInfo.module.css?ae29","components/Profile/My posts/ProfileInfo/ProfileStatusWithHooks.tsx","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/Fade/Fade.js","../node_modules/@material-ui/core/esm/Backdrop/Backdrop.js","webpack://samurai-way/./src/components/common/Modal/ProfileInfoModal.module.css?c24b","components/common/Modal/ProfileInfoModal.tsx","components/Profile/My posts/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/Profile.module.css?b512","webpack://samurai-way/./src/components/Profile/My posts/MyPosts.module.css?16f6","webpack://samurai-way/./src/components/Profile/My posts/Post/Post.module.css?6083","../node_modules/@material-ui/icons/esm/FavoriteBorder.js","components/Profile/My posts/Post/Post.tsx","components/Profile/My posts/AddPost/AddPostForm.module.css","components/Profile/My posts/AddPost/AddPostForm.tsx","webpack://samurai-way/./src/components/Profile/My posts/AddPost/AddPost.module.css?79ba","components/Profile/My posts/AddPost/AddPostContainer.tsx","components/Profile/My posts/AddPost/AddPost.tsx","components/Profile/My posts/MyPosts.tsx","components/Profile/My posts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/authRedirect.tsx","../node_modules/@material-ui/icons/ErrorOutline.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__tPzpV\",\"mainPhoto\":\"ProfileInfo_mainPhoto__E-rUq\",\"contact\":\"ProfileInfo_contact__X7t9C\",\"avatarContainer\":\"ProfileInfo_avatarContainer__y7Loa\",\"infoContainer\":\"ProfileInfo_infoContainer__Zcvcu\",\"profileInfo\":\"ProfileInfo_profileInfo__9QCcu\",\"name\":\"ProfileInfo_name__IVMee\",\"buttonClass\":\"ProfileInfo_buttonClass__jTE9T\",\"more\":\"ProfileInfo_more__jdeOU\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusPropsType) => {\r\n\r\n    let [editMode, setEditMode] = useState(false) //данные хранятся на строне реакта\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]) //синхронизация пропсов и стейта\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const diactivateEditMode = () => {\r\n        if (status.length < 100) {\r\n            setEditMode(false)\r\n            props.updateStatusThunk(status) //отправить родителю, чтобы данные сохранились в бизнесе\r\n        } else {\r\n            return alert('Status must be less than 100 characters')\r\n        }\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            fontSize: 16,\r\n            width: '100%',\r\n            wordBreak: 'break-word'\r\n        }}>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"no status\"}</span>\r\n                </div>}\r\n\r\n            {editMode && <div>\r\n                <TextField autoFocus={true} onBlur={diactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nvar styles = {\n  entering: {\n    opacity: 1\n  },\n  entered: {\n    opacity: 1\n  }\n};\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Fade transition is used by the [Modal](/components/modal/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Fade = /*#__PURE__*/React.forwardRef(function Fade(props, ref) {\n  var children = props.children,\n      _props$disableStrictM = props.disableStrictModeCompat,\n      disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"disableStrictModeCompat\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"TransitionComponent\", \"timeout\"]);\n\n  var theme = useTheme();\n  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;\n  var nodeRef = React.useRef(null);\n  var foreignRef = useForkRef(children.ref, ref);\n  var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : undefined, foreignRef);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (nodeOrAppearing, maybeAppearing) {\n      if (callback) {\n        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing],\n            _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n\n        if (isAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEntering = normalizedTransitionCallback(onEntering);\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    reflow(node); // So the animation always start from the start.\n\n    var transitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var transitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      style: _extends({\n        opacity: 0,\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Fade.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Enable this prop if you encounter 'Function components cannot be given refs',\n   * use `unstable_createStrictModeTheme`,\n   * and can't forward the ref in the child component.\n   */\n  disableStrictModeCompat: PropTypes.bool,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Fade;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Fade from '../Fade';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    // Improve scrollable dialog support.\n    zIndex: -1,\n    position: 'fixed',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\nvar Backdrop = /*#__PURE__*/React.forwardRef(function Backdrop(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      transitionDuration = props.transitionDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"invisible\", \"open\", \"transitionDuration\", \"TransitionComponent\"]);\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: open,\n    timeout: transitionDuration\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, className, invisible && classes.invisible),\n    \"aria-hidden\": true,\n    ref: ref\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Backdrop.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBackdrop'\n})(Backdrop);","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ProfileInfoModal_button__-TCtc\",\"icon\":\"ProfileInfoModal_icon__BEp5Q\",\"title\":\"ProfileInfoModal_title__dpWSG\",\"log\":\"ProfileInfoModal_log__3vHmd\"};","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {LearnMore, ProfileLearnPropsType} from \"../../Profile/My posts/ProfileInfo/ProfileInfo\";\r\nimport s from \"./ProfileInfoModal.module.css\"\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        borderRadius: 15\r\n    },\r\n}));\r\n\r\nexport const ProfileInfoModal: React.FC<ProfileLearnPropsType> = ({profile}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ErrorOutlineIcon color=\"disabled\" fontSize=\"small\" className={s.icon} onClick={handleOpen}/>\r\n            <button type=\"button\" className={s.button} onClick={handleOpen}>\r\n                Learn more\r\n            </button>\r\n            <span className={s.log}>\r\n                {`${document.body.scrollTop = document.documentElement.scrollTop = 0}`}\r\n            </span>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\" className={s.title}>Detailed Information</h2>\r\n                        <p id=\"transition-modal-description\"><LearnMore profile={profile}/></p>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {ContactPropsType, ProfileUserPropsType} from \"../../../../Redux/profile-reducer\";\r\nimport userPhoto from '../../../../assets/images/user2.jpg'\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {UserAvatar} from \"../../UserAvatar/UserAvatar\";\r\nimport {ProfileInfoModal} from \"../../../common/Modal/ProfileInfoModal\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileUserPropsType | null\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: ProfileUserPropsType) => Promise<any>\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = ({\r\n                                                         profile,\r\n                                                         status,\r\n                                                         updateStatusThunk,\r\n                                                         isOwner,\r\n                                                         savePhoto,\r\n                                                         saveProfile\r\n                                                     }) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelected = (event: ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.files && event.target.files.length) {\r\n            savePhoto(event.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileUserPropsType) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.avatarContainer}>\r\n                    <UserAvatar img={profile.photos.large || userPhoto}\r\n                                savePhoto={savePhoto}\r\n                                size={200}\r\n                                isOwner={isOwner}/>\r\n\r\n\r\n                </div>\r\n                {/* <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {isOwner && <input type={'file'} onChange={mainPhotoSelected}/>}*/}\r\n\r\n                <div className={s.profileInfo}>\r\n                    <span> <b className={s.name}>{profile.fullName}</b>\r\n                        <ProfileStatusWithHooks status={status} updateStatusThunk={updateStatusThunk}/>\r\n                        <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                    </span>\r\n                    <div className={s.more}>\r\n\r\n                        <ProfileInfoModal profile={profile}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.infoContainer}>\r\n                    {editMode\r\n                        ? <ProfileDataForm onSubmit={onSubmit} profile={profile} initialValues={profile}/>\r\n                        : <ProfileData profile={profile} isOwner={isOwner} toEditMode={() => {\r\n                            setEditMode(true)\r\n                        }}/>}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n/*<ProfileDataForm onSubmit={onSubmit} profile={profile} initialValues={profile}/>*/\r\nexport type ProfileDataPropsType = {\r\n    profile: ProfileUserPropsType\r\n    isOwner: boolean\r\n    toEditMode: () => void\r\n}\r\n\r\nexport type ProfileLearnPropsType = {\r\n    profile: ProfileUserPropsType\r\n}\r\n\r\nexport const LearnMore: React.FC<ProfileLearnPropsType> = ({profile}) => {\r\n    return <div>\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {\r\n            Object\r\n                .keys(profile.contacts)\r\n                .map((key) => {\r\n                    return <Contact key={key} contactTitle={key}\r\n                                    contactValue={profile.contacts[key as keyof ContactPropsType]}/>\r\n                })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataPropsType> = ({profile, isOwner, toEditMode}) => {\r\n    return <div>\r\n\r\n        {isOwner && <div>\r\n            <button className={s.buttonClass} onClick={toEditMode}>Edit profile</button>\r\n            {/*<Button variant=\"outlined\" color=\"primary\" onClick={toEditMode}>Edit profile</Button>*/}\r\n        </div>}\r\n    </div>\r\n}\r\n\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nexport const Contact: React.FC<ContactType> = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"profileContainer\":\"Profile_profileContainer__SEcg9\",\"headerImg\":\"Profile_headerImg__SEDYb\"};","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__P8WQf\",\"posts\":\"MyPosts_posts__CCgrz\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__nI8sT\",\"post\":\"Post_post__9kPQr\",\"avatarAndName\":\"Post_avatarAndName__W36Sz\",\"avatar\":\"Post_avatar__PYGK6\",\"message\":\"Post_message__l9bO7\",\"likes\":\"Post_likes__cVuYR\",\"likeimg\":\"Post_likeimg__qs8fs\"};","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');","import React from 'react';\r\nimport s from \"./Post.module.css\"\r\nimport {PostType} from \"../../../../Redux/state\";\r\nimport {UserAvatar} from \"../../UserAvatar/UserAvatar\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {FavoriteBorder} from \"@material-ui/icons\";\r\n\r\ntype PostComponentProps = {\r\n    id: number\r\n    message: string\r\n    like: number\r\n    userName: string\r\n    userAvatar: string\r\n    addLike: (count: number, id: number) => void\r\n}\r\n\r\nconst Post = (props: PostComponentProps) => {\r\n    const onClickLikeHandler = () => {\r\n        let count = props.like+1\r\n        props.addLike(count, props.id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.avatarAndName}>\r\n                <UserAvatar img={props.userAvatar} size={30}/>\r\n                <h5 style={{marginLeft: '5px'}}>{props.userName}</h5>\r\n            </div>\r\n            {/*<img src=\"https://cdn1.flamp.ru/de5d137bb9fffdca9df095726d4100e6.jpeg\"/>*/}\r\n            <span className={s.message}> {props.message}</span>\r\n            <div className={s.likes}>\r\n                <IconButton onClick={onClickLikeHandler} size={'small'}>\r\n                    <FavoriteBorder color={'primary'}/>\r\n                </IconButton>\r\n                <span> {props.like}</span>\r\n\r\n            </div>\r\n\r\n        </div>)\r\n};\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {};","import {FC} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {ButtonSubmit, TextareaFC} from \"../../../common/FormControls/FormsControls\";\r\nimport {maxLengthCreator} from \"../../../../utils/validators/validators\";\r\nimport s from \"./AddPostForm.module.css\"\r\n\r\nexport type AddPostFormDataType = {\r\n    post: string\r\n}\r\nconst maxLength = maxLengthCreator(100)\r\n\r\nconst AddPostForm: FC<InjectedFormProps<AddPostFormDataType>> = (props) => {\r\n    const {handleSubmit} = props\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <div className={s.data}>\r\n                <Field placeholder='Enter you post'\r\n                       type='text'\r\n                       name='post'\r\n                       component={TextareaFC}\r\n                       validate={[maxLength]}\r\n                />\r\n            </div>\r\n            <ButtonSubmit form={AddPostForm}/>\r\n        </form>\r\n    )\r\n}\r\nexport const AddPostReduxForm = reduxForm<AddPostFormDataType>({\r\n    form: 'profileAddPostForm'\r\n})(AddPostForm)","// extracted by mini-css-extract-plugin\nexport default {\"postContainer\":\"AddPost_postContainer__kkmON\",\"title\":\"AddPost_title__ruJBD\",\"newPost\":\"AddPost_newPost__pCjLP\",\"buttonContainer\":\"AddPost_buttonContainer__Dqz62\"};","import {connect} from \"react-redux\";\r\nimport {addPostActionCreator} from \"../../../../Redux/profile-reducer\";\r\nimport {AddPost} from \"./AddPost\";\r\n\r\ntype  MapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => dispatch(addPostActionCreator(newPostText))\r\n    }\r\n}\r\n\r\nexport const AddPostContainer = connect(null, mapDispatchToProps )(AddPost)","import {FC, useState} from \"react\";\r\nimport {AddPostFormDataType, AddPostReduxForm} from \"./AddPostForm\";\r\nimport s from \"./AddPost.module.css\"\r\n\r\ntype AddPostProps = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nexport const AddPost: FC<AddPostProps> = ({addPost}) => {\r\n    const addPostHandler = (values: AddPostFormDataType):void => {\r\n        addPost(values.post)\r\n    }\r\n    return (\r\n        <div className={s.postContainer}>\r\n            <h3 className={s.title}>My posts</h3>\r\n            <AddPostReduxForm onSubmit={addPostHandler}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormsControls\";\r\nimport {ActionTypes, PostType} from \"../../../Redux/state\";\r\nimport {AddPostContainer} from \"./AddPost/AddPostContainer\";\r\n\r\nexport type MessageType = {\r\n    newPostText: string\r\n    posts: Array<PostType>\r\n    addPost?: (newMessage: string) => void\r\n    updateNewPostText?: (newText: string) => void\r\n    dispatch?: (action: ActionTypes) => void\r\n    newMessageText?: string\r\n    userName: string\r\n    userAvatar: string\r\n    addLike: (count: number, id: number) => void\r\n}\r\n\r\nconst MyPosts = React.memo((props: MessageType) => {\r\n    return (\r\n        <div className={s.myPostsContainer}>\r\n            <AddPostContainer/>\r\n            {props.posts.map(elem => {\r\n                    return (<Post key={elem.id}\r\n                                  id={elem.id}\r\n                                  message={elem.message}\r\n                                  like={elem.like}\r\n                                  userName={props.userName}\r\n                                  userAvatar={props.userAvatar}\r\n                                  addLike={props.addLike}/>)\r\n                })}\r\n        </div>\r\n    )\r\n})\r\n// let newPostElement = React.createRef <HTMLTextAreaElement>()\r\n\r\n/*    let onAddPost = (values: any) => {\r\n        if (props.addPost) {\r\n            props.addPost(values.newPostText)\r\n        }\r\n    }*/\r\n\r\n/*  let onPostChange = () => {\r\n      if (newPostElement.current) {\r\n          let text = newPostElement.current.value\r\n          if (props.updateNewPostText) {\r\n              props.updateNewPostText(text)\r\n          }\r\n      }\r\n  }\r\n*/\r\n\r\n/*    return <div className={s.postsBlock}>\r\n        My Posts\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n\r\n        <div className={s.posts}>\r\n            {postElement}\r\n        </div>\r\n    </div>\r\n});\r\n\r\ntype FormDataType = {\r\n    newPostText: string\r\n}\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]}\r\n                       placeholder=\"Post message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm<FormDataType>({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)*/\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addLike, addPostActionCreator} from \"../../../Redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {ActionTypes, PostType, RootStateType} from \"../../../Redux/state\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../../Redux/redux-stor\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    posts: Array<PostType>\r\n    userName: string\r\n    userAvatar: string\r\n}\r\ntype mapDispatchToPropsType  = {\r\n    addLike: (count: number, id: number) => void\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType):mapStateToPropsType => {\r\n    return {\r\n        posts: state.messagePage.posts,\r\n        userName: state.messagePage.profile.fullName,\r\n        userAvatar: state.messagePage.profile.photos.small\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any): mapDispatchToPropsType => {\r\n    return {\r\n        addLike: (count: number, id: number) => dispatch(addLike(count, id)),\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n/*type ContainerNewType = {\r\n    store: Store<ReduxStateType, ActionTypes>\r\n}\r\n\r\nconst MyPostsContainer1 = (props: ContainerNewType) => {\r\n    let state = props.store.getState().messagePage\r\n    let newPostElement = React.createRef <HTMLTextAreaElement>()\r\n\r\n    let addPost = () => {\r\n        props.store.dispatch(addPostActionCreator(''))\r\n    }\r\n\r\n    let onPostChange = (text: string) => {\r\n            props.store.dispatch(updateNewPostActionCreator(text))\r\n    }\r\n\r\n\r\n    return (\r\n        <MyPosts newPostText={state.newPostText} posts={state.posts}\r\n                 updateNewPostText={onPostChange} addPost={addPost}/>\r\n    )\r\n\r\n};*/\r\n\r\n/*\r\n//данные из стейна, пропсы\r\nlet mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        newPostText: state.messagePage.newPostText,\r\n        posts: state.messagePage.posts\r\n    }\r\n}\r\n\r\n//колбеки\r\nlet mapDispatchToProps = (dispatch: (action: ActionTypes) => void) => {\r\n    return {\r\n        /!*updateNewPostText: (text: string) => {\r\n            dispatch(updateNewPostActionCreator(text))\r\n        },*!/\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;*/\r\n","import React from 'react';\r\nimport ProfileInfo from \"./My posts/ProfileInfo/ProfileInfo\";\r\nimport {ProfileUserPropsType} from \"../../Redux/profile-reducer\";\r\nimport s from \"./Profile.module.css\"\r\nimport {MyPostsContainer} from \"./My posts/MyPostsContainer\";\r\n\r\nexport type ProfileNewType = {\r\n    profile: ProfileUserPropsType | null\r\n    status: string\r\n    updateStatusThunk: (status: string) => void\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: ProfileUserPropsType) => Promise<any>\r\n}\r\n\r\nconst Profile = (props: ProfileNewType) => {\r\n    return (\r\n        <div className={s.profileContainer}>\r\n            <div>\r\n                <img className={s.headerImg} alt='big content'\r\n                     src='https://sun9-28.userapi.com/impf/IZV8ZqKT5iFUZ5RcKf17lskCX9W354PG0UFpWg/BogcuCe_SGc.jpg?size=1920x768&quality=95&crop=0,25,2560,1022&sign=0cc3f2d38c31cc82955bebdec766f149&type=cover_group'/>\r\n            </div>\r\n            <ProfileInfo profile={props.profile} saveProfile={props.saveProfile} status={props.status}\r\n                         updateStatusThunk={props.updateStatusThunk} isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}/>\r\n            <MyPostsContainer addPost={() => {\r\n            }} key={''} newPostText={''} updateNewPostText={() => {\r\n            }} newMessageText={''} dispatch={() => {\r\n            }}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    ProfileUserPropsType,\r\n    savePhoto, saveProfile,\r\n    updateStatusThunk\r\n} from \"../../Redux/profile-reducer\";\r\nimport {ReduxStateType} from \"../../Redux/redux-stor\";\r\nimport {ProfilePageType} from \"../../Redux/state\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport withAuthRedirect from \"../../hoc/authRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype DispatchToPropsType = {\r\n    getProfileThunk: (userId: number) => void\r\n    getStatusThunk: (userId: number) => void\r\n    updateStatusThunk: (status: string) => void\r\n    savePhoto: (file: any) => void\r\n    saveProfile: (profile: ProfileUserPropsType) => Promise<any>\r\n}\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\n\r\ntype PropsType = MapPropsType & DispatchToPropsType & RouteComponentProps<PathParamsType>\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component <PropsType> {\r\n\r\n    refreshProfile() {\r\n     /*   let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '26538'\r\n        }\r\n\r\n        this.props.getProfileThunk(userId)\r\n        this.props.getStatusThunk(userId)\r\n\r\n    }*/\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\r\n        } else {\r\n            this.props.getProfileThunk(userId)\r\n            this.props.getStatusThunk(userId)\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<ProfilePageType>, snapshot?: any) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile} status={this.props.status}\r\n                         updateStatusThunk={this.props.updateStatusThunk}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n//хок\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet mapStateToProps = (state: ReduxStateType) => ({\r\n    profile: state.messagePage.profile,\r\n    status: state.messagePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfileThunk, getStatusThunk, updateStatusThunk, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React, {Component, ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../Redux/redux-stor\";\r\n\r\n\r\ntype IsAuthPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: ReduxStateType): IsAuthPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nfunction withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: IsAuthPropsType) {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n};\r\n\r\nexport default withAuthRedirect;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');\n\nexports.default = _default;","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","style","fontSize","width","wordBreak","onDoubleClick","TextField","autoFocus","onBlur","length","alert","updateStatusThunk","onChange","e","currentTarget","value","stylesOrCreator","options","arguments","undefined","makeStylesWithoutDefault","_extends","defaultTheme","styles","entering","opacity","entered","defaultTimeout","enter","duration","exit","React","ref","children","_props$disableStrictM","disableStrictModeCompat","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$TransitionComp","TransitionComponent","Transition","_props$timeout","timeout","other","_objectWithoutProperties","theme","useTheme","enableStrictModeCompat","unstable_strictMode","nodeRef","foreignRef","useForkRef","handleRef","normalizedTransitionCallback","callback","nodeOrAppearing","maybeAppearing","_ref","current","_ref2","_slicedToArray","node","isAppearing","handleEntering","handleEnter","reflow","transitionProps","getTransitionProps","mode","webkitTransition","transitions","create","transition","handleEntered","handleExiting","handleExit","handleExited","appear","state","childProps","visibility","Backdrop","classes","className","_props$invisible","invisible","open","transitionDuration","Fade","clsx","root","withStyles","zIndex","position","display","alignItems","justifyContent","right","bottom","top","left","backgroundColor","WebkitTapHighlightColor","name","useStyles","makeStyles","modal","paper","palette","background","border","boxShadow","shadows","padding","spacing","borderRadius","ProfileInfoModal","profile","setOpen","handleOpen","ErrorOutline","color","s","onClick","type","document","body","scrollTop","documentElement","Modal","onClose","closeAfterTransition","BackdropComponent","BackdropProps","id","LearnMore","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","ProfileData","isOwner","toEditMode","savePhoto","saveProfile","Preloader","UserAvatar","img","photos","large","userPhoto","size","ProfileDataForm","onSubmit","formData","then","initialValues","createSvgIcon","d","userAvatar","marginLeft","userName","message","IconButton","count","like","addLike","FavoriteBorder","maxLength","maxLengthCreator","AddPostReduxForm","reduxForm","form","AddPostForm","handleSubmit","Field","placeholder","component","TextareaFC","validate","AddPostContainer","connect","dispatch","addPost","newPostText","addPostActionCreator","values","post","posts","elem","MyPostsContainer","messagePage","small","MyPosts","alt","src","updateNewPostText","newMessageText","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfileThunk","getStatusThunk","console","error","refreshProfile","prevProps","prevState","snapshot","withAuthRedirect","compose","auth","isAuth","withRouter","mapStateToPropsForRedirect","Component","restProps","to","_interopRequireDefault","require","_interopRequireWildcard","exports","_default","default","createElement","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}